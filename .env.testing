# .env.testing

APP_ENV=testing
APP_DEBUG=true

# Database Connection for Testing
# Using SQLite in-memory for fastest tests
DB_CONNECTION=sqlite
DB_DATABASE=:memory: # This tells SQLite to use an in-memory database

# Alternatively, if you need a persistent SQLite file for debugging tests:
# DB_CONNECTION=sqlite
# DB_DATABASE=/tmp/testing_database.sqlite # Path to a file, ensure directory is writable

# Or if you need a MySQL/PostgreSQL database for specific test cases (slower):
# DB_CONNECTION=mysql
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=your_test_db_name # IMPORTANT: Create a dedicated database for testing
# DB_USERNAME=root
# DB_PASSWORD=

# Cache Driver
CACHE_DRIVER=array # Using 'array' cache driver prevents cache from persisting between tests

# Session Driver
SESSION_DRIVER=array # Using 'array' session driver prevents session from persisting between tests

# Queue Connection
QUEUE_CONNECTION=sync # 'sync' runs jobs immediately, no need for a queue worker during tests

# Mail Mailer
MAIL_MAILER=array # 'array' mailer collects sent emails into an array for testing, no actual emails sent

# Broadcasting
BROADCAST_DRIVER=log # Or 'null'

# Filesystem
FILESYSTEM_DISK=local # Or 'testing' if you define a specific testing disk in config/filesystems.php

# Logging
LOG_CHANNEL=stack # Or 'null' to prevent excessive logging during tests

# Telescope (if installed)
TELESCOPE_ENABLED=false # Disable Telescope for tests to prevent overhead

# Custom values for your app that might need different values during testing
# E.g., external API keys
# STRIPE_KEY=sk_test_...
# SOME_EXTERNAL_API_URL=http://localhost:8080/mock-api
